{"version":3,"file":"static/js/954.de1859d7.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/App/App.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","pages/Contacts.js"],"sourcesContent":["import { Field, Form, ErrorMessage} from \"formik\";\nimport styled from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    margin-left: auto;\n    margin-right: auto;\n    width: 400px;\n    gap: ${p => p.theme.spacing(2)};\n    margin-bottom: ${p => p.theme.spacing(8)};\n`;\n\nexport const FormLabel = styled.label`\n    text-align: start;\n    font-size: 16px;\n    font-weight: 600;\n    color: ${p => p.theme.colors.black};\n\n`;\n\nexport const StyledField = styled(Field)`\n    padding: ${p => p.theme.spacing(1)} ${p => p.theme.spacing(3)};\n    border: 1px solid ${p => p.theme.colors.blue};\n    border-radius: ${p => p.theme.radii.md};\n    font-size: 18px;\n    font-weight: 400;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n    color: ${p => p.theme.colors.red};\n    font-size: 16px;\n    font-weight: 500;\n    margin-right: auto;\n`;\n\nexport const BtnAddContact = styled.button`\n    width: 180px;\n    padding: ${p => p.theme.spacing(2)};\n    margin-right: auto;\n    margin-left: auto;\n    margin-top: ${p => p.theme.spacing(6)};\n    background-color: ${p => p.theme.colors.green};\n    color: ${p => p.theme.colors.white};\n    border-radius: ${p => p.theme.radii.lg};\n    border: 4px solid ${p => p.theme.colors.green};\n    font-size: 18px;\n    font-weight: 400;\n    transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1), color 250ms cubic-bezier(0.4, 0, 0.2, 1), font-weight 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\n    &:hover,\n    &:focus {\n        border: 4px solid ${p => p.theme.colors.darkGreen};\n        color: ${p => p.theme.colors.darkGreen};\n        font-weight: 600;\n    }\n\n`;","import styled from 'styled-components';\n\n\nexport const AppContainer = styled.div`\n    width: 600px;\n    margin: ${p => p.theme.spacing(6)} auto;\n    padding: ${p => p.theme.spacing(6)};\n    background-color: #d3d3d3;\n    border-radius: ${p => p.theme.radii.lg};\n    border: 1px solid ${p => p.theme.colors.grey};\n    box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.08),\n    0px 1px 1px rgba(46, 47, 66, 0.16), 0px 1px 6px rgba(46, 47, 66, 0.08);\n        text-align: center;\n\n`;\n\nexport const MainTitle = styled.h1`\n    color: ${p => p.theme.colors.black};\n    margin-bottom: ${p => p.theme.spacing(6)};\n    font-size: 40px;\n`;\n\nexport const ContactsTitle = styled.h2`\n    color: ${p => p.theme.colors.black};\n    margin-bottom: ${p => p.theme.spacing(2)};\n    font-size: 32px;\n`;","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase().trim()));\n    }\n);\n","import { Formik} from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-hot-toast';\nimport { BtnAddContact, ErrorMsg, FormLabel, StyledField, StyledForm } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts} from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string()\n    .min(2, 'Name must contain at least 2 characters')\n    .max(30, 'Too long name')\n    .required('Name is required!'),\n    number: Yup.string()\n    .matches(/^\\d{3}-\\d{3}-\\d{4}$/, {\n        message: 'Invalid Phone Number! Use the format 050-123-4567.',\n        excludeEmptyString: false,\n    })\n    .required('Phone number is required!')\n    .max(12, 'Invalid phone number!'),\n});\n\n\nexport const ContactForm = () => {\n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    return (\n    <Formik\n        initialValues={{\n            name: '',\n            number: '',\n        }}\n        \n        validationSchema={validationSchema}\n        \n        onSubmit={(values, actions) => {\n            const isExist = contacts.some(contact => contact.name.toLowerCase() === values.name.toLowerCase());\n\n            if (isExist) {\n                actions.resetForm();\n                toast.error(`${values.name} is alredy in contacts.`);\n                return;\n            } \n            dispatch(addContact(values));\n            actions.resetForm();\n        }}\n        >\n        <StyledForm>\n            <FormLabel htmlFor=\"name\">Name</FormLabel>\n            <StyledField type=\"text\" name=\"name\" id=\"name\" autoComplete=\"on\" placeholder=\"John Smith\" />\n            <ErrorMsg name=\"name\" component=\"div\" />\n\n            <FormLabel htmlFor=\"number\">Number</FormLabel>\n            <StyledField type=\"tel\" name=\"number\" id=\"number\" autoComplete=\"on\" placeholder=\"XXX-XXX-XXXX\" />\n            <ErrorMsg name=\"number\" component=\"div\" />\n\n            <BtnAddContact type=\"submit\">Add contact</BtnAddContact>\n        </StyledForm>\n    </Formik>\n)\n} \n    \n    \n","import styled from 'styled-components';\n\n\nexport const ContactLi = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 400px;\n    margin: 0 auto;\n    margin-top: ${p => p.theme.spacing(3)};\n\n`;\n\nexport const ContactName = styled.div`\n    display: flex;\n    width: 320px;\n    justify-content: space-between;\n    color: ${p => p.theme.colors.black};\n    font-size: 16px;\n    font-weight: 500;\n\n`;\n\nexport const BtnDelete = styled.button`\n    padding: ${p => p.theme.spacing(1.5)};\n    background-color: ${p => p.theme.colors.blue};\n    color: ${p => p.theme.colors.white};\n    border-radius: ${p => p.theme.radii.md};\n    border: none;\n    font-size: 16px;\n    font-weight: 400;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1), font-weight 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\n    &:hover,\n    &:focus {\n        background-color: ${p => p.theme.colors.red};\n        font-weight: 600;\n    }\n`;","import { useDispatch } from \"react-redux\"\nimport { BtnDelete, ContactLi, ContactName } from \"./ContactItem.styled\"\nimport { deleteContact } from \"redux/contacts/operations\";\n\nexport const ContactItem = ({ contact: {name, number, id}}) => {\n    const dispatch = useDispatch();\n\n    return (\n        <ContactLi>\n            <ContactName>\n                <span>{name}:</span>\n                <span>{number}</span>\n            </ContactName>\n            <BtnDelete type=\"button\" onClick={() => dispatch(deleteContact(id))}>Delete</BtnDelete>\n        </ContactLi>\n    )\n}","import { ContactItem } from \"components/ContactItem/ContactItem\";\nimport { useSelector } from \"react-redux\";\nimport { selectVisibleContacts} from \"redux/contacts/selectors\";\n\nexport const ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts);\n\n    return (\n        <ul>\n            {visibleContacts.map(contact => (\n                <ContactItem key={contact.id} contact={contact} />\n            ))} \n        </ul>\n    )\n};","import styled from 'styled-components';\n\nexport const FilterTitle = styled.h3`\n    margin-bottom: ${p => p.theme.spacing(2)};\n    color: ${p => p.theme.colors.black};\n    font-size: 20px;\n    font-weight: 500;\n`;\n\nexport const FilterInput = styled.input`\n    width: 400px;\n    padding: ${p => p.theme.spacing(1)} ${p => p.theme.spacing(3)};\n    border: 1px solid ${p => p.theme.colors.blue};\n    border-radius: ${p => p.theme.radii.md};\n    font-size: 18px;\n    font-weight: 400;\n`;\n","import { useDispatch, useSelector } from \"react-redux\"\nimport { FilterInput, FilterTitle } from \"./Filter.styled\"\nimport { selectFilter } from \"redux/contacts/selectors\"\nimport { changeFilter } from \"redux/contacts/filterSlice\";\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            <FilterTitle>Find contacts by name</FilterTitle>\n            <FilterInput\n                type=\"text\"\n                name=\"filter\"\n                id=\"filter\"\n                value={filter}\n                required\n                onChange={e => dispatch(changeFilter(e.target.value))} />\n        </>\n    )\n}\n","import styled from \"styled-components\";\n\nexport const LoaderContainer = styled.div`\n    display: flex;\n    justify-content: center;\n`;","import { ThreeDots } from \"react-loader-spinner\";\nimport { LoaderContainer } from \"./Loader.styled\";\n\nexport const Loader = () => {\n    return (\n        <LoaderContainer>\n            <ThreeDots \n                height=\"80\" \n                width=\"80\" \n                radius=\"9\"\n                color=\"#4fa94d\" \n                ariaLabel=\"three-dots-loading\"\n                wrapperStyle={{}}\n                wrapperClassName=\"\"\n                visible={true}\n            />\n        </LoaderContainer>\n    )\n}\n\n\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Helmet } from \"react-helmet-async\";\nimport { AppContainer, ContactsTitle, MainTitle } from \"components/App/App.styled\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectError, selectIsLoading } from \"redux/contacts/selectors\";\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch]);\n\n    return (\n        <>\n            {isLoading && !error && <Loader />}\n            <Helmet>\n                <title>Your contactss</title>\n            </Helmet>\n            <AppContainer>\n        \n                <MainTitle>Phonebook</MainTitle>\n                <ContactForm />\n                <ContactsTitle>Contacts</ContactsTitle>\n                <Filter />\n                <ContactList />\n        \n            </AppContainer>\n        </>\n    )\n};\n\nexport default Contacts;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","p","theme","spacing","FormLabel","_templateObject2","colors","black","StyledField","Field","_templateObject3","blue","radii","md","ErrorMsg","ErrorMessage","_templateObject4","red","BtnAddContact","_templateObject5","green","white","lg","darkGreen","AppContainer","grey","MainTitle","ContactsTitle","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","trim","validationSchema","Yup","shape","min","max","required","number","matches","message","excludeEmptyString","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","onSubmit","values","actions","some","resetForm","toast","concat","addContact","children","_jsxs","htmlFor","type","id","autoComplete","placeholder","component","ContactLi","ContactName","BtnDelete","ContactItem","_ref","_ref$contact","onClick","deleteContact","ContactList","visibleContacts","map","FilterTitle","FilterInput","Filter","_Fragment","value","onChange","e","changeFilter","target","LoaderContainer","Loader","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","useEffect","fetchContacts","Helmet"],"sourceRoot":""}